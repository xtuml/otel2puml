data_sources:
  json:
    # Specify the file path to the JSON data
    dirpath: null
    filepath: data.json
    # Define the field mapping from the application to your JSON structure
    data_location: resource_spans
    header:
      paths: [resource:attributes, scope_spans::scope:name] 
    span_mapping:
      spans:
        key_paths: [scope_spans::spans]
    field_mapping:
      job_name:
        key_paths: [HEADER:resource:attributes::key, HEADER:scope_spans::scope:name]
        key_value: [service.name, null]
        value_paths: [value:Value:StringValue, null]
        value_type: string
      job_id:
        key_paths: [trace_id]
        value_type: string
      event_type:
        key_paths: [attributes::key]
        key_value: [http.method]
        value_paths: [value:Value:StringValue]
        value_type: string
      event_id:
        key_paths: [span_id]
        value_type: string
      start_timestamp:
        key_paths: [start_time_unix_nano]
        value_type: unix_nano
      end_timestamp:
        key_paths: [end_time_unix_nano]
        value_type: unix_nano
      application_name:
        key_paths: [attributes::key]
        key_value: [http.host]
        value_paths: [value:Value:StringValue]
        value_type: string
      parent_event_id:
        key_paths: [parent_span_id]
        value_type: string
      child_event_ids:
        key_paths: [child_span_ids]
        value_type: string

data_holders:
  sql:
    db_uri: sqlite:///graph_database.db
    batch_size: 100
    time_buffer: 15 # minutes

ingest_data:
  data_source: json
  data_holder: sql