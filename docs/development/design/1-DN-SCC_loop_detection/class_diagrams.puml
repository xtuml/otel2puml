@startuml

class Event {
    #event_type : str
    +event_sets : set<EventSet>
    +in_event_sets : set<EventSet>
    +logic_gate_tree: ProcessTree
    +__hash__() : int
    +update_event_sets([]str): void
    +update_in_event_sets([]str): void
}

class LoopEvent {
    start_nodes: set<Event>
    end_nodes: set<Event>
    break_edges: set<EventTuple>
    sub_graph: EventGraph
}

class EventTuple {
    #out_event : Event
    #in_event : Event
    +__hash__() : int
    +__eq__(EventTuple): bool
}


class EventSet <inherits from dict> {
    #self : dict<str, int>
    +__hash__() : int
    +__eq__(EventSet): bool
}

class EventGraph {
    nodes: set<Event>
    edges: set<EventTuple>
}


Event ..> EventSet
EventGraph ..> Event
EventGraph ..> EventTuple
EventTuple ..> Event
LoopEvent --> Event
LoopEvent --> EventTuple
LoopEvent --> EventGraph

@enduml